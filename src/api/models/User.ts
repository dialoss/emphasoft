/* tslint:disable */
/* eslint-disable */
/**
 * Emphasoft API
 * Documentation for test assignment.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * 
     * @type {number}
     * @memberof User
     */
    readonly id: number;
    /**
     * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
     * @type {string}
     * @memberof User
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    firstName?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    lastName?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    password: string;
    /**
     * Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
     * @type {boolean}
     * @memberof User
     */
    isActive: boolean;
    /**
     * 
     * @type {Date}
     * @memberof User
     */
    readonly lastLogin: Date | null;
    /**
     * Designates that this user has all permissions without explicitly assigning them.
     * @type {boolean}
     * @memberof User
     */
    readonly isSuperuser: boolean;
}

/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): boolean {
    if (!('id' in value)) return false;
    if (!('username' in value)) return false;
    if (!('password' in value)) return false;
    if (!('isActive' in value)) return false;
    if (!('lastLogin' in value)) return false;
    if (!('isSuperuser' in value)) return false;
    return true;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'username': json['username'],
        'firstName': json['first_name'] == null ? undefined : json['first_name'],
        'lastName': json['last_name'] == null ? undefined : json['last_name'],
        'password': json['password'],
        'isActive': json['is_active'],
        'lastLogin': (json['last_login'] == null ? null : new Date(json['last_login'])),
        'isSuperuser': json['is_superuser'],
    };
}

export function UserToJSON(value?: Omit<User, 'id'|'last_login'|'is_superuser'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'username': value['username'],
        'first_name': value['firstName'],
        'last_name': value['lastName'],
        'password': value['password'],
        'is_active': value['isActive'],
    };
}

